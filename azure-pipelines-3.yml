trigger:
  - main
pool:
  vmImage: ubuntu-latest
variables:
  - group: test-dev

steps:

  - task: Npm@1
    displayName: 'Build'
    inputs:
      command: 'install'
      #workingDir: './package.json'
  


  - script: |
      aws ecr get-login-password --region $(AWS_REGION) | docker login --username AWS --password-stdin 954678508118.dkr.ecr.$(AWS_REGION).amazonaws.com
    displayName: 'Login to AWS - ECR'
    env:
      AWS_ACCESS_KEY_ID: $(AWS_ACCESS_KEY_ID)
      AWS_SECRET_ACCESS_KEY: $(AWS_SECRET_ACCESS_KEY)
      AWS_SESSION_TOKEN: $(AWS_SESSION_TOKEN)

  - bash: |
       docker run --rm -i hadolint/hadolint < Dockerfile
    displayName: 'Dockerfile LINTING'

  - task: Docker@2
    displayName: 'Building Docker Image with tags trial service'
    inputs:
      repository: 'demo-ecr-repo'
      command: 'build'
      Dockerfile: 'Dockerfile'
      tags: 'latest'
      addPipelineData: false
      addBaseImageData: false
  
  - bash: |
       curl -sfL https://raw.githubusercontent.com/aquasecurity/trivy/main/contrib/install.sh | sh -s -- -b /usr/local/bin v0.34.0
       trivy image demo-ecr-repo:latest
    displayName: 'Trivy Scan'


  - bash: |
      docker images
      docker tag demo-ecr-repo:latest 954678508118.dkr.ecr.ap-south-1.amazonaws.com/demo-ecr-repo:latest
      docker push 954678508118.dkr.ecr.ap-south-1.amazonaws.com/demo-ecr-repo:latest
    displayName: 'Docker Push with tags'


  - task: CopyFiles@2
    displayName: 'Copy K8s Files to artifact directory'
    inputs:
       SourceFolder: 'K8s'
       Contents: |
          *
       TargetFolder: '$(build.artifactstagingdirectory)'
       CleanTargetFolder: true
       OverWrite: true
       flattenFolders: true

  - bash: |
      cd $(build.artifactstagingdirectory)
      zip -r k8s-$(Build.BuildNumber).zip *
    displayName: 'Build Zip'
  
  - task: PublishBuildArtifacts@1
    displayName: 'Publish Artifact'
    inputs:
      ArtifactName:  'k8sBuilds'
      PathtoPublish: '$(build.artifactstagingdirectory)/k8s-$(Build.BuildNumber).zip'